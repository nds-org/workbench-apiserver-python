swagger: '2.0'
info:
  title: NDS Labs Workbench
  description: API for the NDS Labs Workbench service
  contact:
   email: ndslabs-support@nationaldataservice.org
   name:  NDS Labs Support
   url: http://www.nationaldataservice.org/projects/labs.html
  version: 1.2.0
host: localhost:5000
basePath: /api
securityDefinitions:
  Bearer:
    type: apiKey
    name: X-API-KEY
    in: header
  Cookie:
    type: apiKey
    name: Cookie
    in: header
schemes:
  - http
  - https
produces:
  - application/json
consumes:
  - application/json
parameters:
  service-id:
    name: service-id
    in: path
    description: The unique service identifier
    type: string
    required: true
  account-id:
    name: account-id
    in: path
    description: The unique account identifier
    type: string
    required: true
  stack-id:
    name: stack-id
    in: path
    description: The unique stack identifier
    type: string
    required: true
  stack-service-id:
    name: stack-service-id
    in: path
    description: The unique stack service identifier
    type: string
    required: true
  vocab-name:
    name: vocab-name
    in: path
    description: Vocabulary name
    type: string
    required: true
paths:
  /version:
    get:
      tags:
        - system
      operationId: 'get_version'
      x-swagger-router-controller: 'api.v2.system'
      description: |
        Retrieve the server version
      responses:
        '200':
          description: OK
          schema:
            type: string
  /authenticate:
    post:
      tags:
        - user account
      operationId: 'post_authenticate'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Authenticate a user (login)
      parameters:
        - name: auth
          in: body
          description: Auth definition
          schema:
            $ref: '#/definitions/Auth'
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Invalid credentials
    delete:
      security:
        - Cookie: []
      tags:
        - user account
      operationId: 'delete_authenticate'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Logout a user
      responses:
        '204':
          description: Logout successful
  /refresh_token:
    get:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'refresh_token'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Refresh the JWT token
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Not logged in
  /check_token:
    get:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'check_token'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Validate the JWT token
      parameters:
        - name: host
          in: query
          description: 'If specified, test authorization for JWT to access \
              the given hostname'
          required: false
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Not logged in
  /services:
    get:
      tags:
        - app spec
      operationId: 'list_services'
      x-swagger-router-controller: 'api.v2.app_specs'
      description: |
        Retrieves a site-wide list of available service definitions.
      parameters:
        - name: catalog
          in: query
          description: 'Filter list for catalog (user, system, all)'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
    post:
      security:
        - Cookie: []
      tags:
        - app spec
      operationId: 'create_service'
      x-swagger-router-controller: 'api.v2.app_specs'
      description: |
        Adds a new service to the service library
      parameters:
        - name: service
          in: body
          description: Service definition
          schema:
            $ref: '#/definitions/Service'
          required: true
      responses:
        '201':
          description: Created
  '/services/{service-id}':
    parameters:
      - $ref: '#/parameters/service-id'
    get:
      security:
        - Cookie: []
      tags:
        - app spec
      operationId: 'get_service_by_id'
      x-swagger-router-controller: 'api.v2.app_specs'
      description: |
        Retrieves the service definition.
      responses:
        '200':
          description: The service object
          schema:
            $ref: '#/definitions/Service'
    put:
      security:
        - Cookie: []
      tags:
        - app spec
      operationId: 'update_service'
      x-swagger-router-controller: 'api.v2.app_specs'
      description: |
        Updates a service definition in the service library
      parameters:
        - name: service
          in: body
          description: Service definition
          schema:
            $ref: '#/definitions/Service'
          required: true
      responses:
        '201':
          description: Updated
    delete:
      security:
        - Cookie: []
      tags:
        - app spec
      operationId: 'delete_service'
      x-swagger-router-controller: 'api.v2.app_specs'
      description: |
        Delete a service
      responses:
        '200':
          description: OK
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'list_accounts'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Retrieves a site-wide list of NDSLabs accounts.
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '404':
          description: Not found
    post:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'create_account'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Adds a new accounts
      parameters:
        - name: accounts
          in: body
          description: Account definition
          schema:
            $ref: '#/definitions/Account'
          required: true
      responses:
        '201':
          description: Created
  '/accounts/{account-id}':
    parameters:
      - $ref: '#/parameters/account-id'
    get:
      security:
        - Cookie: []
      tags:
        - user account
      operationId: 'get_account_by_id'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Retrieves basic information about a account.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
    put:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'update_account'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Updates account information
      parameters:
        - name: account
          in: body
          description: Account definition
          schema:
            $ref: '#/definitions/Account'
          required: true
      responses:
        '201':
          description: Updated
    delete:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'delete_account'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Delete a account
      responses:
        '200':
          description: OK
  /stacks:
    get:
      security:
        - Cookie: []
      tags:
        - user app
      operationId: 'list_stacks'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Retrieves a list of stacks for this account.
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Stack'
        '404':
          description: Not found
    post:
      security:
        - Cookie: []
      tags:
        - user app
      operationId: 'create_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Adds a new stack to this account
      parameters:
        - name: stack
          in: body
          description: Stack definition
          schema:
            $ref: '#/definitions/Stack'
          required: true
      responses:
        '201':
          description: Created
  '/stacks/{stack-id}':
    parameters:
      - $ref: '#/parameters/stack-id'
    get:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'get_stack_by_id'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Retrieves the stack definition.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stack'
    put:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'update_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Updates stack information
      parameters:
        - name: stack
          in: body
          description: Stack definition
          schema:
            $ref: '#/definitions/Stack'
          required: true
      responses:
        '201':
          description: Updated
    delete:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'delete_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Delete a stack
      responses:
        '200':
          description: OK
  '/stacks/{stack-id}/rename':
    parameters:
      - $ref: '#/parameters/stack-id'
    put:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'rename_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      parameters:
        - name: name
          description: Stack name
          schema:
            type: string
          in: body
          required: true
      description: |
        Rename the stack
      responses:
        '201':
          description: Updated
  '/logs/{stack-service-id}':
    parameters:
      - $ref: '#/parameters/stack-service-id'
    get:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'get_stack_service_logs'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Retrieves the stack service log.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Log'
  '/start':
    parameters:
      - in: query
        name: key
        type: string
        required: true
        description: The key of the service spec to start and navigate to
    get:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'quickstart_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Adds, starts, and navigates to the specified application
      responses:
        '200':
          description: OK
        '400':
          description: Application key was not given
        '404':
          description: Application key was not found
  '/start/{stack-id}':
    parameters:
      - $ref: '#/parameters/stack-id'
    get:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'start_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Starts the specified stack
      responses:
        '200':
          description: OK
  '/stop/{stack-id}':
    parameters:
      - $ref: '#/parameters/stack-id'
    get:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'stop_stack'
      x-swagger-router-controller: 'api.v2.user_apps'
      description: |
        Stops the specified stack
      responses:
        '200':
          description: OK
  /configs:
    get:
      security:
        - Bearer: []
      tags:
        - user app
      operationId: 'get_stack_configs'
      x-swagger-router-controller: 'api.v2.user_apps'
      parameters:
        - name: services
          in: query
          description: services to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      description: |
        Retrieves a list of service configuration options
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Config'
  /validate:
    get:
      tags:
        - user account
      operationId: 'validate_o_auth_token'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Check if the user has an active/valid OAuth session
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Not logged in
  /register:
    post:
      tags:
        - user account
      operationId: 'register_user'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Register
      parameters:
        - name: account
          in: body
          description: Account definition
          schema:
            $ref: '#/definitions/Account'
          required: true
      responses:
        '201':
          description: Created
  '/vocabulary/{vocab-name}':
    get:
      tags:
        - vocabulary
      operationId: 'get_vocabulary_by_name'
      x-swagger-router-controller: 'api.v2.vocabulary'
      parameters:
        - $ref: '#/parameters/vocab-name'
      description: |
        Retrieves a vocabulary
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vocabulary'

  '/change_password':
    put:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'change_password'
      x-swagger-router-controller: 'api.v2.user_accounts'
      parameters:
        - name: password
          description: Change password object
          schema:
            type: string
            properties:
              password:
                type: string
          in: body
          required: true
      description: |
        Change the user's password
      responses:
        '201':
          description: Updated
  '/register/verify':
    put:
      tags:
        - user account
      operationId: 'verify_email_address'
      x-swagger-router-controller: 'api.v2.user_accounts'
      parameters:
        - name: verify
          description: Verification object
          schema:
            type: object
            properties:
              u:
                type: string
              t:
                type: string
          in: body
          required: true
      description: |
        Verify registered email address
      responses:
        '200':
          description: Verified
  '/reset':
    parameters:
      - name: userId
        in: query
        description: 'Username or email of the account to reset'
        required: true
        type: string
    post:
      security:
        - Bearer: []
      tags:
        - user account
      operationId: 'send_reset_password_email'
      x-swagger-router-controller: 'api.v2.user_accounts'
      description: |
        Request password reset email.
      responses:
        '200':
          description: OK
  '/support':
    post:
      security:
        - Bearer: []
      tags:
        - support
      operationId: 'submit_help_request'
      x-swagger-router-controller: 'api.support'
      description: |
        Submit a support request
      parameters:
        - name: support
          in: body
          description: Support request definition
          schema:
            $ref: '#/definitions/SupportRequest'
          required: true
      responses:
        '201':
          description: Created
  '/contact':
    get:
      tags:
        - support
      operationId: 'get_contact_info'
      x-swagger-router-controller: 'api.support'
      description: |
        Get contact information
      responses:
        '200':
          description: OK
definitions:
  Auth:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  VolumeMount:
    type: object
    properties:
      mountPath:
        type: string
      name:
        type: string
  Service:
    x-groupName: "ndslabs.org"
    x-version: "v1"
    x-scope: "Cluster"
    x-shortNames:
      - workbenchspec
      - workbenchspecs
      - wbappspec
      - wbappspecs
      - appspec
      - appspecs
      - wbspec
      - wbspecs
      - spec
      - specs
    x-singular: "workbenchappspec"
    x-plural: "workbenchappspecs"
    x-kind: "WorkbenchAppSpec"
    type: object
    properties:
      id:
        type: string
      key:
        type: string
      label:
        type: string
      description:
        type: string
      maintainer:
        type: string
      logo:
        type: string
      info:
        type: string
      display:
        type: string
      access:
        type: string
      developerEnvironment:
        type: string
      config:
        type: array
        items:
          $ref: '#/definitions/Config'
        default: []
      readinessProbe:
        $ref: '#/definitions/ReadyProbe'
      image:
        $ref: '#/definitions/ServiceImage'
      resourceLimits:
        $ref: '#/definitions/ResourceLimits'
      depends:
        type: array
        items:
          $ref: '#/definitions/ServiceDependency'
        default: []
      ports:
        type: array
        items:
          $ref: '#/definitions/Port'
        default: []
      volumeMounts:
        type: array
        items:
          $ref: '#/definitions/VolumeMount'
        default: []
      repositories:
        type: array
        items:
          $ref: '#/definitions/Repository'
        default: []
      command:
        type: array
        items:
          type: string
        default: []
      args:
        type: array
        items:
          type: string
        default: []
      tags:
        type: array
        items:
          type: string
        default: []
      createdTime:
        type: integer
      updatedTime:
        type: integer
    required:
      - key
  ReadyProbe:
    type: object
    properties:
      type:
        type: string
      path:
        type: string
      port:
        type: integer
      initialDelay:
        type: integer
      timeout:
        type: integer
  Port:
    type: object
    properties:
      port:
        type: integer
      protocol:
        type: string
  Repository:
    type: object
    properties:
      type:
        type: string
      port:
        type: string
      url:
        type: string
  ServiceDependency:
    type: object
    properties:
      key:
        type: string
      required:
        type: boolean
  Account:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      description:
        type: string
      namespace:
        type: string
      storageQuota:
        type: string
      nexturl:
        type: string
      resourceLimits:
        type: object
        properties:
          cpuMax:
            type: string
          cpuDefault:
            type: string
          memMax:
            type: string
          memDefault:
            type: string
          storageQuota:
            type: string
      resourceUsage:
        type: object
        properties:
          cpu:
            type: string
          memory:
            type: string
          storage:
            type: string
  Stack:
    x-groupName: "ndslabs.org"
    x-version: "v1"
    x-plural: "workbenchuserapps"
    x-singular: "workbenchuserapp"
    x-kind: "WorkbenchUserApp"
    x-scope: "Namespaced"
    x-shortNames:
      - workbenchapp
      - workbenchapps
      - wbuserapp
      - wbuserapps
      - userapp
      - userapps
      - wbapp
      - wbapps
      - app
      - apps
    type: object
    properties:
      id:
        type: string
      key:
        type: string
      secure:
        type: boolean
      name:
        type: string
      services:
        type: array
        items:
          $ref: '#/definitions/StackService'
      status:
        type: string
      action:
        type: string
      createdTime:
        type: integer
      updateTime:
        type: integer
    required:
      - key
  StackService:
    type: object
    properties:
      id:
        type: string
      stack:
        type: string
      createdTime:
        type: integer
      updateTime:
        type: integer
      service:
        type: string
      status:
        type: string
      statusMessages:
        type: array
        items:
          type: string
      developerEnvironment:
        type: string
      config:
        type: object
        additionalProperties:
          type: string
        default: {}
      internalIP:
        type: string
      readinessProbe:
        $ref: '#/definitions/ReadyProbe'
      imageTag:
        type: string
      resourceLimits:
        $ref: '#/definitions/ResourceLimits'
      volumeMounts:
        type: object
        additionalProperties:
          type: string
        default: {}
      ports:
        type: object
        additionalProperties:
          type: integer
        default: {}
      endpoints:
        type: array
        items:
          type: object
          properties:
            host:
              type: string
            path:
              type: string
            url:
              type: string
            port:
              type: integer
            nodePort:
              type: integer
            protocol:
              type: string
    required:
      - stack
      - service
  Log:
    type: object
    properties:
      text:
        type: string
  Config:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      label:
        type: string
      canOverride:
        type: boolean
        default: true
      isPassword:
        type: boolean
        default: false
  ServiceImage:
    type: object
    properties:
      registry:
        type: string
      name:
        type: string
      tags:
        type: array
        items:
          type: string
  ResourceLimits:
    type: object
    properties:
      cpuMax:
        type: string
        default: "400m"
      cpuDefault:
        type: string
        default: "200m"
      memMax:
        type: string
        default: "512mb"
      memDefault:
        type: string
        default: "1gb"
  Vocabulary:
    type: object
    properties:
      name:
        type: string
      terms:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            definition:
              type: string
  SupportRequest:
    type: object
    properties:
      type:
        type: string
      message:
        type: string

