
version: "3.9"

services:
  mongo:
    image: "mongo:5.0.3"
    env_file:
      - mongo.env
    networks:
      - workbench
    volumes:
      - "mongo:/data/db"
    ports:
    - "27017:27017"
    restart: always

  keycloak:
    image: "quay.io/keycloak/keycloak:17.0.1"
    user: "root"
    env_file:
    - keycloak.env
    volumes:
      - ./imports:/opt/jboss/keycloak/imports
      - keycloak:/opt/keycloak/data/h2/
    networks:
      - workbench
    ports:
    - "8080:8080"
    command: ["start-dev", "-Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"]
    restart: always

  api:
    image: "ndslabs/apiserver:python"
    depends_on:
      - mongo
      - keycloak
    networks:
      - workbench
    build:
      context: ..
      dockerfile: Dockerfile
    volumes:
      # Within a cluster, we have a token and crt file for auth
      #- "../test/data/token:/var/run/secrets/kubernetes.io/serviceaccount/token"
      #- "../test/data/ca.crt:/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"

      # Outside of a cluster, we can use the kubeconfig
      - "~/.kube/config.dockerformac:/root/.kube/config"

      # Uncomment this to enable live mapping of source into the container (faster development)
      - "..:/app"
    ports:
      - "5000:5000"
    env_file:
      - apiserver.env
    restart: always

volumes:
  mongo:
  keycloak:

networks:
  workbench:
